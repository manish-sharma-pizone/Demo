name: Build and Release APK

on:
  push:
    branches:
      - main  # Trigger this workflow on pushes to the 'main' branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest  # Run this job on the latest Ubuntu environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the repository code

    - name: Set version
      id: set_version
      run: echo "::set-output name=VERSION::1.0.0"  # Set version for the release

    - name: Set execute permissions for gradlew
      run: chmod +x ./gradlew  # Make the gradlew script executable

    - name: Build APK
      run: ./gradlew assembleRelease  # Build the APK file

    - name: List APK Files
      run: ls -R app/build/outputs/apk  # List files to ensure the APK is present

    - name: Create Tag
      id: create_tag
      run: |
        # Delete the existing tag from the remote if it exists
        git tag -d v${{ steps.set_version.outputs.VERSION }} || true
        git push --delete origin v${{ steps.set_version.outputs.VERSION }} || true
        
        # Create and push the new tag
        git tag v${{ steps.set_version.outputs.VERSION }}
        git push https://x-access-token:${{ secrets.MY_GITHUB_TOKEN }}@github.com/pizoneuser/Demo.git v${{ steps.set_version.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.set_version.outputs.VERSION }}
        name: Release v${{ steps.set_version.outputs.VERSION }}
        body: |
          Initial release for version v${{ steps.set_version.outputs.VERSION }}.
        artifacts: "app/build/outputs/apk/release/*"  # Upload all APK files in the release folder
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
