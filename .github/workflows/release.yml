name: Build and Release APK

on:
  push:
    branches:
      - main  # Trigger this workflow on pushes to the 'main' branch

jobs:
  build-and-release:
    runs-on: ubuntu-latest  # Run this job on the latest Ubuntu environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v3  # Checkout the repository code

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        distribution: 'zulu'
        java-version: 11

    - name: Set version
      id: set_version
      run: echo "::set-output name=VERSION::1.0.0"  # Set version for the release

    - name: Set execute permissions for gradlew
      run: chmod +x ./gradlew  # Make the gradlew script executable

    - name: Build APK
      run: ./gradlew assembleRelease  # Build the APK file

    - name: Rename APK File
      run: mv app/build/outputs/apk/release/app-release-unsigned.apk app/build/outputs/apk/release/app-release.apk  # Rename the APK file

    - name: Verify APK File
      run: |
        echo "Verifying APK file..."
        if [ -f app/build/outputs/apk/release/app-release.apk ]; then
          echo "APK file found"
        else
          echo "APK file not found"
        fi

    - name: List APK Files
      run: ls -al app/build/outputs/apk/release/  # List files to ensure the APK is present

    - name: Create Tag
      id: create_tag
      run: |
        # Delete the existing tag from the remote if it exists
        git tag -d v${{ steps.set_version.outputs.VERSION }} || true
        git push --delete origin v${{ steps.set_version.outputs.VERSION }} || true
        
        # Create and push the new tag
        git tag v${{ steps.set_version.outputs.VERSION }}
        git push https://x-access-token:${{ secrets.MY_GITHUB_TOKEN }}@github.com/pizoneuser/Demo.git v${{ steps.set_version.outputs.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: app-release.apk
        path: app/build/outputs/apk/release/app-release.apk  # Correct path to the APK file

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.set_version.outputs.VERSION }}
        name: Release v${{ steps.set_version.outputs.VERSION }}
        body: |
          Initial release for version v${{ steps.set_version.outputs.VERSION }}.
        files: app/build/outputs/apk/release/app-release.apk  # Correct path to the APK file
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
